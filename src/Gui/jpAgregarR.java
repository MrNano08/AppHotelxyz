/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Gui;

import static Gui.Dashboard.contenido;
import Logica.GestorReservaciones;
import Logica.Reservaciones;
import com.toedter.calendar.JDateChooser;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import Logica.Global;
import Logica.Habitaciones;


/**
 *
 * @author UNA
 */
public class jpAgregarR extends javax.swing.JPanel implements Global{

    Calendar fecha_actual = new GregorianCalendar();
    GestorReservaciones gestorReservaciones;
    private int textN = 1;
    private int textA = 1;
    private int iA = 1;
    private int iN = 1;
    int seleccionado;
    private static int pos;
    private static int validarEH;

    public jpAgregarR() {
        initComponents();

        jcFechaActual.setCalendar(fecha_actual);
        gestorReservaciones = new GestorReservaciones();
        cargarIdsHabitaciones();
        cargarIdsClientes();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgAgregar = new javax.swing.JPanel();
        txtAgregar = new javax.swing.JLabel();
        btnBack = new javax.swing.JPanel();
        txtbtnBack = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JPanel();
        txtbtnCancelar = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JPanel();
        txtbtnGuardar = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cbOcupantesNinos = new javax.swing.JComboBox<>();
        cbCliente = new javax.swing.JComboBox<>();
        cbHabitacion = new javax.swing.JComboBox<>();
        cbOcupantesAdultos = new javax.swing.JComboBox<>();
        cbDescuento = new javax.swing.JComboBox<>();
        txtTotal = new javax.swing.JTextField();
        txtDiasHospedaje = new javax.swing.JTextField();
        txtSubtotal = new javax.swing.JTextField();
        jcFechaActual = new com.toedter.calendar.JDateChooser();
        jcFechaFinal = new com.toedter.calendar.JDateChooser();
        jcFechaInicial = new com.toedter.calendar.JDateChooser();
        cbFormaPago = new javax.swing.JComboBox<>();

        bgAgregar.setBackground(new java.awt.Color(255, 236, 239));

        txtAgregar.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        txtAgregar.setText("Agregar");

        btnBack.setBackground(new java.awt.Color(255, 236, 239));
        btnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBackMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnBackMousePressed(evt);
            }
        });

        txtbtnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/back_iconx48.png"))); // NOI18N

        javax.swing.GroupLayout btnBackLayout = new javax.swing.GroupLayout(btnBack);
        btnBack.setLayout(btnBackLayout);
        btnBackLayout.setHorizontalGroup(
            btnBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnBackLayout.createSequentialGroup()
                .addComponent(txtbtnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        btnBackLayout.setVerticalGroup(
            btnBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnBackLayout.createSequentialGroup()
                .addComponent(txtbtnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btnCancelar.setBackground(new java.awt.Color(55, 41, 72));
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCancelarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCancelarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCancelarMousePressed(evt);
            }
        });

        txtbtnCancelar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        txtbtnCancelar.setForeground(new java.awt.Color(247, 236, 222));
        txtbtnCancelar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtbtnCancelar.setText("Cancelar");

        javax.swing.GroupLayout btnCancelarLayout = new javax.swing.GroupLayout(btnCancelar);
        btnCancelar.setLayout(btnCancelarLayout);
        btnCancelarLayout.setHorizontalGroup(
            btnCancelarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnCancelarLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(txtbtnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        btnCancelarLayout.setVerticalGroup(
            btnCancelarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtbtnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        btnGuardar.setBackground(new java.awt.Color(55, 41, 72));
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGuardarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnGuardarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnGuardarMousePressed(evt);
            }
        });

        txtbtnGuardar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        txtbtnGuardar.setForeground(new java.awt.Color(247, 236, 222));
        txtbtnGuardar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtbtnGuardar.setText("Guardar");

        javax.swing.GroupLayout btnGuardarLayout = new javax.swing.GroupLayout(btnGuardar);
        btnGuardar.setLayout(btnGuardarLayout);
        btnGuardarLayout.setHorizontalGroup(
            btnGuardarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnGuardarLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(txtbtnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        btnGuardarLayout.setVerticalGroup(
            btnGuardarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtbtnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        jLabel1.setText("Fecha actual:");

        jLabel2.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        jLabel2.setText("Id huesped:");

        jLabel3.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        jLabel3.setText("Id habitación:");

        jLabel4.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        jLabel4.setText("Forma de pago:");

        jLabel5.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        jLabel5.setText("Ocupantes adultos:");

        jLabel6.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        jLabel6.setText("Ocupantes niños:");

        jLabel7.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        jLabel7.setText("Fecha inicial:");

        jLabel8.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        jLabel8.setText("Fecha final:");

        jLabel9.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        jLabel9.setText("Días de hospedaje:");

        jLabel10.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        jLabel10.setText("Sub-Total:");

        jLabel11.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        jLabel11.setText("Descuento:");

        jLabel12.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        jLabel12.setText("Total:");

        jLabel13.setFont(new java.awt.Font("Roboto Black", 1, 20)); // NOI18N
        jLabel13.setText("Datos de la reservación");

        cbOcupantesNinos.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        cbOcupantesNinos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        cbOcupantesNinos.setToolTipText("");
        cbOcupantesNinos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbOcupantesNinosItemStateChanged(evt);
            }
        });

        cbCliente.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        cbCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));

        cbHabitacion.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        cbHabitacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        cbHabitacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbHabitacionItemStateChanged(evt);
            }
        });

        cbOcupantesAdultos.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        cbOcupantesAdultos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        cbOcupantesAdultos.setToolTipText("");
        cbOcupantesAdultos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbOcupantesAdultosItemStateChanged(evt);
            }
        });

        cbDescuento.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        cbDescuento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0%", "5%", "10%", "15%" }));
        cbDescuento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbDescuentoItemStateChanged(evt);
            }
        });

        txtTotal.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N

        txtDiasHospedaje.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N

        txtSubtotal.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N

        jcFechaActual.setDateFormatString("dd/MM/yyyy");
        jcFechaActual.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N

        jcFechaFinal.setDateFormatString("dd/MM/yyyy");
        jcFechaFinal.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        jcFechaFinal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jcFechaFinalPropertyChange(evt);
            }
        });

        jcFechaInicial.setDateFormatString("dd/MM/yyyy");
        jcFechaInicial.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        jcFechaInicial.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jcFechaInicialPropertyChange(evt);
            }
        });

        cbFormaPago.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        cbFormaPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Tarjeta", "Efectivo" }));
        cbFormaPago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbFormaPagoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout bgAgregarLayout = new javax.swing.GroupLayout(bgAgregar);
        bgAgregar.setLayout(bgAgregarLayout);
        bgAgregarLayout.setHorizontalGroup(
            bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgAgregarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bgAgregarLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(bgAgregarLayout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                                    .addComponent(cbDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(bgAgregarLayout.createSequentialGroup()
                                    .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel12)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtTotal)
                                        .addComponent(txtDiasHospedaje)
                                        .addComponent(txtSubtotal)
                                        .addGroup(bgAgregarLayout.createSequentialGroup()
                                            .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(cbOcupantesNinos, 0, 376, Short.MAX_VALUE)
                                                .addComponent(cbCliente, 0, 376, Short.MAX_VALUE)
                                                .addComponent(cbHabitacion, 0, 376, Short.MAX_VALUE)
                                                .addComponent(cbOcupantesAdultos, 0, 376, Short.MAX_VALUE)
                                                .addComponent(jcFechaActual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jcFechaFinal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jcFechaInicial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(cbFormaPago, 0, 376, Short.MAX_VALUE))
                                            .addGap(0, 0, Short.MAX_VALUE)))))
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bgAgregarLayout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtAgregar)))
                .addContainerGap())
        );
        bgAgregarLayout.setVerticalGroup(
            bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgAgregarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAgregar)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgAgregarLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(21, 21, 21)
                        .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cbFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cbOcupantesAdultos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cbOcupantesNinos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jcFechaActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgAgregarLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(21, 21, 21)
                        .addComponent(jLabel8)
                        .addGap(21, 21, 21)
                        .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtDiasHospedaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(cbDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(bgAgregarLayout.createSequentialGroup()
                        .addComponent(jcFechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jcFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 604, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseEntered
        setColor(btnBack);
    }//GEN-LAST:event_btnBackMouseEntered

    private void btnBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseExited
        resetColor(btnBack);
    }//GEN-LAST:event_btnBackMouseExited

    private void btnBackMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMousePressed

        jpReservaciones reservaciones = new jpReservaciones();
        reservaciones.setSize(contenido.getWidth(), contenido.getHeight());
        reservaciones.setLocation(0, 0);

        contenido.removeAll();
        contenido.add(reservaciones, BorderLayout.CENTER);
        contenido.revalidate();
        contenido.repaint();


    }//GEN-LAST:event_btnBackMousePressed

    private void btnCancelarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseEntered
        btnCancelar.setBackground(new Color(37, 27, 55));
        txtbtnCancelar.setForeground(new Color(255, 202, 202));
    }//GEN-LAST:event_btnCancelarMouseEntered

    private void btnCancelarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseExited
        btnCancelar.setBackground(new Color(55, 41, 72));
        txtbtnCancelar.setForeground(new Color(255, 236, 239));
    }//GEN-LAST:event_btnCancelarMouseExited

    private void btnCancelarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMousePressed
        jpReservaciones reservaciones = new jpReservaciones();
        reservaciones.setSize(contenido.getWidth(), contenido.getHeight());
        reservaciones.setLocation(0, 0);

        contenido.removeAll();
        contenido.add(reservaciones, BorderLayout.CENTER);
        contenido.revalidate();
        contenido.repaint();

    }//GEN-LAST:event_btnCancelarMousePressed

    private void btnGuardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseEntered
        btnGuardar.setBackground(new Color(37, 27, 55));
        txtbtnGuardar.setForeground(new Color(255, 202, 202));
    }//GEN-LAST:event_btnGuardarMouseEntered

    private void btnGuardarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseExited
        btnGuardar.setBackground(new Color(55, 41, 72));
        txtbtnGuardar.setForeground(new Color(255, 236, 239));
    }//GEN-LAST:event_btnGuardarMouseExited

    private void btnGuardarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMousePressed
        Habitaciones habitaciones = new Habitaciones();
        jpHabitaciones habitacionesP = new jpHabitaciones();
        String error = validarEntrada();
        if (error.equals("")) {//no hay errores
            Reservaciones reservaciones = new Reservaciones();

            reservaciones.setFecha(jcFechaActual.getDate());
            reservaciones.setIdCliente(Integer.parseInt(cbCliente.getSelectedItem().toString()));
            reservaciones.setIdHabi(Integer.parseInt(cbHabitacion.getSelectedItem().toString()));
            reservaciones.setFormaPago(String.valueOf(cbFormaPago.getSelectedIndex()).toUpperCase() );
            reservaciones.setAdultos(cbOcupantesAdultos.getSelectedIndex());
            reservaciones.setNinnos(cbOcupantesNinos.getSelectedIndex());
            reservaciones.setFechaIni(jcFechaInicial.getDate());
            reservaciones.setFechaFin(jcFechaFinal.getDate());
            reservaciones.setDiasHos(Integer.parseInt(txtDiasHospedaje.getText()));
            reservaciones.setSubTotal(Double.parseDouble(txtSubtotal.getText()));
            reservaciones.setDescuento(cbDescuento.getSelectedIndex());
            reservaciones.setTotal(Double.parseDouble(txtTotal.getText()));

            if (txtAgregar.getText().equals("Agregar")) {
                if (gestorReservaciones.existe(reservaciones.getIdRentaHabi())) {
                    new frmMessagep().setVisible(true);
                    frmMessagep.txtMessage.setText("Id de reservación ya registrada.");
                    frmMessagep.txtMessageImage.setIcon(new ImageIcon(getClass().getResource("/resources/Icons/info_iconx64.gif")));

                } else {
                    reservaciones.setIdRentaHabi(reservaciones.autogenerarId());
                    listaHabitaciones.set(cbHabitacion.getSelectedIndex()-1, habitaciones).setEstado(true);
                    gestorReservaciones.guardar(reservaciones);

                    new frmMessagep().setVisible(true);
                    frmMessagep.txtMessage.setText("Datos guardados correctamente.");
                    frmMessagep.txtMessageImage.setIcon(new ImageIcon(getClass().getResource("/resources/Icons/info_iconx64.gif")));
                    gestorReservaciones.guardarEnArchivo();

                }
            } else {
                
                reservaciones.setIdRentaHabi(listaReservaciones.get(pos).getIdRentaHabi());
                gestorReservaciones.editar(reservaciones);
                gestorReservaciones.guardarEnArchivo();
                new frmMessagep().setVisible(true);
                    frmMessagep.txtMessage.setText("Datos guardados correctamente.");
                    frmMessagep.txtMessageImage.setIcon(new ImageIcon(getClass().getResource("/resources/Icons/info_iconx64.gif")));
                    
            }

        } else {
            new frmMessagep().setVisible(true);

            frmMessagep.txtMessage.setText(validarEntrada());
            frmMessagep.txtMessageImage.setIcon(new ImageIcon(getClass().getResource("/resources/Icons/info_iconx64.gif")));

        }

        if (error.equals("")) {
        habitacionesP.cambiarEstado();
        
        }
    }//GEN-LAST:event_btnGuardarMousePressed

    private void cbHabitacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbHabitacionItemStateChanged

        while (iA > 1) {

            cbOcupantesAdultos.removeItemAt(textA - 1);
            textA--;
            iA--;
        }

        while (iN > 1) {
            cbOcupantesNinos.removeItemAt(textN - 1);
            textN--;
            iN--;
        }

        cargarCantidadMaxhues();

    }//GEN-LAST:event_cbHabitacionItemStateChanged

    private void cbOcupantesAdultosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbOcupantesAdultosItemStateChanged
        CargarDatosprecio();

    }//GEN-LAST:event_cbOcupantesAdultosItemStateChanged

    private void cbOcupantesNinosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbOcupantesNinosItemStateChanged
        CargarDatosprecio();
    }//GEN-LAST:event_cbOcupantesNinosItemStateChanged

    private void cbDescuentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbDescuentoItemStateChanged
        CargarDatosprecio();
    }//GEN-LAST:event_cbDescuentoItemStateChanged

    private void jcFechaInicialPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jcFechaInicialPropertyChange
        CargarDatosprecio();
    }//GEN-LAST:event_jcFechaInicialPropertyChange

    private void jcFechaFinalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jcFechaFinalPropertyChange
        CargarDatosprecio();
    }//GEN-LAST:event_jcFechaFinalPropertyChange

    private void cbFormaPagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbFormaPagoItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbFormaPagoItemStateChanged

    void setColor(JPanel panel) { //Cambiar color de los paneles(botones)
        panel.setBackground(new Color(80, 65, 97));

    }

    void resetColor(JPanel panel) { //Color por defecto de los paneles(botones)
        panel.setBackground(new Color(255, 236, 239));

    }

    public static int getPos() {
        return pos;
    }

    public static void setPos(int pos) {
        jpAgregarR.pos = pos;
    }

    public static int getValidarEH() {
        return validarEH;
    }

    public static void setValidarEH(int validarEH) {
        jpAgregarR.validarEH = validarEH;
    }




    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bgAgregar;
    private javax.swing.JPanel btnBack;
    private javax.swing.JPanel btnCancelar;
    private javax.swing.JPanel btnGuardar;
    protected static javax.swing.JComboBox<String> cbCliente;
    protected static javax.swing.JComboBox<String> cbDescuento;
    protected static javax.swing.JComboBox<String> cbFormaPago;
    protected static javax.swing.JComboBox<String> cbHabitacion;
    protected static javax.swing.JComboBox<String> cbOcupantesAdultos;
    protected static javax.swing.JComboBox<String> cbOcupantesNinos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    protected static com.toedter.calendar.JDateChooser jcFechaActual;
    protected static com.toedter.calendar.JDateChooser jcFechaFinal;
    protected static com.toedter.calendar.JDateChooser jcFechaInicial;
    protected javax.swing.JLabel txtAgregar;
    protected static javax.swing.JTextField txtDiasHospedaje;
    protected static javax.swing.JTextField txtSubtotal;
    protected static javax.swing.JTextField txtTotal;
    private javax.swing.JLabel txtbtnBack;
    private javax.swing.JLabel txtbtnCancelar;
    private javax.swing.JLabel txtbtnGuardar;
    // End of variables declaration//GEN-END:variables

    public void CalcularDiasHos(JDateChooser jcFechaInicial, JDateChooser jcFechaFinal) {

        if (jcFechaInicial.getDate() != null && jcFechaFinal.getDate() != null) {
            Calendar inicio = jcFechaInicial.getCalendar();
            Calendar termino = jcFechaFinal.getCalendar();
            int dias = -1;

            while (inicio.before(termino) || inicio.equals(termino)) {
                dias++;
                inicio.add(Calendar.DATE, 1);
            }
            if (dias == 0) {
                dias++;
            }
            txtDiasHospedaje.setText(String.valueOf(dias));
        }

    }

    private void cargarIdsHabitaciones() {
        ArrayList<String> lista = gestorReservaciones.obtenerIdHabitaciones();

        for (String hab : lista) {
            cbHabitacion.addItem(hab);
        }

    }

    private void cargarIdsClientes() {
        ArrayList<String> lista = gestorReservaciones.obtenerIdClientes();

        for (String cli : lista) {
            cbCliente.addItem(cli);
        }

    }

    private String validarEntrada() {
        jpHabitaciones hab = new jpHabitaciones();
        int filatbl = cbHabitacion.getSelectedIndex() - 1;

        if (jcFechaActual.getDate() == null) {
            jcFechaActual.requestFocus();
            return "Se requiere la fecha actual.";
        }

        if (cbCliente.getSelectedIndex() == 0) {
            cbCliente.requestFocus();
            return "Elija el id del cliente.";
        }

        if (cbHabitacion.getSelectedIndex() == 0) {
            cbHabitacion.requestFocus();
            return "Elija el id de la habitación.";
        }

        if (cbFormaPago.getSelectedIndex() == 0) {
            cbFormaPago.requestFocus();
            return "Elija la forma de pago.";
        }

        if (cbOcupantesAdultos.getSelectedIndex() == 0) {
            cbOcupantesAdultos.requestFocus();
            return "Elija la cantidad de ocupantes adultos.";
        }

        if (jcFechaInicial.getDate() == null) {
            jcFechaInicial.requestFocus();
            return "Se requiere la fecha de inicial.";
        }

        if (jcFechaFinal.getDate() == null) {
            jcFechaFinal.requestFocus();
            return "Se requiere la fecha de final.";
        }

        if (cbHabitacion.getSelectedIndex() == 0) {
            cbHabitacion.requestFocus();
            return "Elija el id de la habitación.";
        }


        if ((cbOcupantesAdultos.getSelectedIndex() + cbOcupantesNinos.getSelectedIndex() > Integer.parseInt((hab.tblHabitaciones.getValueAt(filatbl, 3).toString())))) {
            return "La cantidad de ocupantes máxima es de " + Integer.valueOf((hab.tblHabitaciones.getValueAt(filatbl, 3).toString())) + " personas.";
        }

        if (jcFechaInicial.getDate() == null) {
            jcFechaInicial.requestFocus();
            return "Se requiere la fecha de inicial.";
        }

        if (jcFechaFinal.getDate() == null) {
            jcFechaFinal.requestFocus();
            return "Se requiere la fecha de final.";
        }

        if (jcFechaInicial.getDate().after(jcFechaFinal.getDate())) {

            return "La fecha inicial debe ser anterior a la fecha final.";
        }
        
        if (jcFechaActual.getDate().after(jcFechaInicial.getDate())) {

            return "La fecha inicial debe ser posterior a la fecha actual.";
        }
        if (jcFechaActual.getDate().after(jcFechaFinal.getDate())) {

            return "La fecha final debe ser posterior a la fecha actual.";
        }
        if (validarEH == Integer.parseInt(cbHabitacion.getSelectedItem().toString()) && txtAgregar.getText().equals("Editar")) {
            
        } else {
            if (listaHabitaciones.get(cbHabitacion.getSelectedIndex()-1).isEstado() == true) {

            return "La habitación seleccionada está ocupada.";
        }
        }
        
        if (listaHabitaciones.get(cbHabitacion.getSelectedIndex()-1).isActiva()== false) {

            return "La habitación seleccionada está inactiva.";
        }

        return "";
        

    }


    public int cantidadMaxHues() {
        int cantidadMHues = 0;
        int filatbl = cbHabitacion.getSelectedIndex() - 1;
        jpHabitaciones hab = new jpHabitaciones();
        cantidadMHues = Integer.parseInt((hab.tblHabitaciones.getValueAt(filatbl, 3).toString()));
        return cantidadMHues;
    }

    public void cargarCantidadMaxhues() {

        if (cbHabitacion.getSelectedIndex() != 0) {

            while (iA <= cantidadMaxHues()) {

                cbOcupantesAdultos.addItem(String.valueOf(textA));
                textA++;
                iA++;
            }

            while (iN <= cantidadMaxHues() - 1) {
                cbOcupantesNinos.addItem(String.valueOf(textN));
                textN++;
                iN++;
            }

        }
        seleccionado = cbHabitacion.getSelectedIndex();

    }


    public void CargarDatosprecio() {
        jpHabitaciones hab = new jpHabitaciones();
        int filatbl = cbHabitacion.getSelectedIndex() - 1;

        if (cbHabitacion.getSelectedIndex() != 0 && cbOcupantesAdultos.getSelectedIndex() != 0 && jcFechaInicial.getDate() != null && jcFechaFinal.getDate() != null && (cbOcupantesAdultos.getSelectedIndex() + cbOcupantesNinos.getSelectedIndex()) <= Integer.parseInt((hab.tblHabitaciones.getValueAt(filatbl, 3).toString())) && jcFechaFinal.getDate().after(jcFechaInicial.getDate())&&jcFechaInicial.getDate().after(jcFechaActual.getDate())) {
            CalcularDiasHos(jcFechaInicial, jcFechaFinal);
            txtSubtotal.setText(String.valueOf(CalcularSubTotal()));
            txtTotal.setText(String.valueOf(calcularPrecioTotal()));
        }

    }

    public double calcularPrecioAdultos() {
        double pAdultos = 0;
        int filatbl = cbHabitacion.getSelectedIndex() - 1;
        int cantidad = cbOcupantesAdultos.getSelectedIndex();
        jpHabitaciones hab = new jpHabitaciones();
        pAdultos = Double.parseDouble(hab.tblHabitaciones.getValueAt(filatbl, 4).toString()) * Double.parseDouble(txtDiasHospedaje.getText());
        pAdultos = pAdultos * cbOcupantesAdultos.getSelectedIndex();
        return pAdultos;

    }

    public double calcularPrecioNinnos() {
        double pNinnos = 0;
        int filatbl = cbHabitacion.getSelectedIndex() - 1;
        jpHabitaciones hab = new jpHabitaciones();
        pNinnos = Double.parseDouble(hab.tblHabitaciones.getValueAt(filatbl, 5).toString()) * Double.parseDouble(txtDiasHospedaje.getText());
        pNinnos = pNinnos * cbOcupantesNinos.getSelectedIndex();
        return pNinnos;
    }

    public double CalcularSubTotal() {
        return calcularPrecioAdultos() + calcularPrecioNinnos();
    }

    public double calcularPrecioTotal() {
        int descuento = cbDescuento.getSelectedIndex();
        CalcularSubTotal();
        switch (descuento) {
            case 0:
                return CalcularSubTotal();

            case 1:
                return CalcularSubTotal() - (CalcularSubTotal() * 0.05);

            case 2:
                return CalcularSubTotal() - CalcularSubTotal() * 0.10;

            case 3:
                return CalcularSubTotal() - CalcularSubTotal() * 0.15;

        }
        return 0;

    }

    @Override
    public void guardarEnArchivo() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void recuperarDeArchivo() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

}
